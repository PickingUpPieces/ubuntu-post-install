#!/bin/bash
#
# Update the list of packages in 'data/purge.list' to suit your preferences
# Listed packages that are are not any system-crucial software to avoid breakage

# Remove pre-installed apps
function purge_unused {
	NAME="Unused Pre-installed Applications"
	echo_message title "Removing ${NAME,,}..."
	# Check list
	LIST=$(dirname "$0")'/data/purge.list'
	# Remove loop
		for PACKAGE in $(cat $LIST); do
			# If package is not installed
			if [ $(check_package_installed $PACKAGE) != 0 ]; then
				# Show already removed message
				echo_message info "Package '$PACKAGE' already removed."
			else
				# Remove package
				echo_message info "'$PACKAGE' is installed. Removing..."
				# Admin privileges
				superuser_do "apt remove -y $PACKAGE"
				# Finished
				echo_message success "'$PACKAGE' removal is complete."
			fi
		done
		# Finished
		echo_message success "Removal of ${NAME,,} complete."
}
# Remove pre-installed apps
function purge_snaps {
	NAME="Unused Pre-installed Snaps"
	echo_message title "Removing ${NAME,,}..."
	# Check list
	LIST=$(dirname "$0")'/data/purge-snaps.list'

	# Remove loop
		for PACKAGE in $(cat $LIST); do
			# If package is not installed
			if [[ $(snap list | grep $PACKAGE &> /dev/null; echo $?) != 0 ]]; then
				# Show already removed message
				echo_message info "snap '$PACKAGE' already removed."
			else
				# Remove package
				echo_message info "snap '$PACKAGE' is installed. Removing..."
				# Admin privileges
				superuser_do "snap remove $PACKAGE"
				# Finished
				echo_message success "'$PACKAGE' removal is complete."
			fi
		done
		# Finished
		echo_message success "Removal of ${NAME,,} complete."
}

# Remove Orphaned Packages
function remove_orphans {
	echo_message info "Removing orphaned packages..."
	# Admin privileges
	superuser_do "apt autoremove -y $PACKAGE"
	# Done
	echo_message success "Removal of orphaned packages complete."
}

# Remove Leftover Config files
function remove_leftovers {
	echo_message info "Removing leftover configuration files..."
	# Admin privileges
	superuser_do "dpkg --purge $(COLUMNS=200 dpkg -l | grep '^rc' | tr -s ' ' | cut -d ' ' -f 2)"
	# Done
	echo_message success "Removal of leftover configuration files complete."
}

# Clean packages cache
function clean_apt_cache {
	echo_message info "Cleaning package cache..."
	# Admin privileges
	superuser_do "apt clean"
	# Done
	echo_message success "Package cache cleaned."
}

# Cleanup System
function system_cleanup {
	NAME="System Cleanup"
	echo_message title "Starting ${NAME,,}..."
	
	purge_unused
	purge_snaps
	remove_orphans
	clean_apt_cache
	remove_leftovers
}
